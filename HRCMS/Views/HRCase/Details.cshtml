@using Microsoft.AspNetCore.Mvc.Localization;
@using System.Globalization;
@using Microsoft.AspNetCore.Localization;

@inject IViewLocalizer Localizer
@inject IHtmlLocalizer<SharedResource> SharedLocalizer


@model HRCMS.ViewModels.HRCaseModel

@{
    ViewData["Title"] = ViewBag.pageTitle;
}

<h1>@ViewData["Title"]</h1>
<div class="row">
    <div class="col-md-12">
        <div class="wb-tabs">
            <div class="tabpanels">

                <details id="tabGeneral">
                    <summary>@Localizer["Case Summary"]</summary>
                    <h2>@Localizer["Employee Information"]</h2>

                    <table class=" table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>@Localizer["First Name"]</th>
                                <th>@Localizer["Last Name"]</th>
                                <th>@Localizer["Email"]</th>
                                <th>@Localizer["<acronym title='Personal Record Identifier'>PRI</acronym>"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>@Model.LastName</td>
                                <td>@Model.FirstName</td>
                                <td><a href="mailto:@Model.Email">@Model.Email</a></td>
                                <td><div id="PRI">@Model.PRI</div></td>
                            </tr>
                        </tbody>
                    </table>
                    <h2>
                        @Localizer["Case Details"]
                    </h2>
                    <h3>
                        @Localizer["Inquiry"]
                    </h3>
                    <p>
                        @Model.Description
                    </p>
                    <table class=" table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th>@Localizer["Case Status"]</th>
                                <th>@Localizer["Case Type"]</th>
                                <th>@Localizer["Case Sub-Type"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>
                                    @if (Model.CaseStatusId == "315840001")
                                    {
                                    <p>
                                        @SharedLocalizer["Received by Pay"]
                                    </p>
                                    }
                                    else
                                    {
                                        <p>
                                            @Model.CaseStatusText
                                        </p>
                                    }
                                </td>
                                <td>@Model.CaseType.TypeName</td>
                                <td>@Model.CaseSubType.SubTypeName</td>
                            </tr>
                        </tbody>
                    </table>
                    @if (Model.CaseStatusId == "315840004" || Model.CaseStatusId == "315840005") //the case is withdrew by Pay or closed
                    {
                        <h2>@Localizer["Resolution"]</h2>
                        <p>@Html.Raw(@Model.Resolution)</p>
                    }
                    <form asp-action="" method="post">
                        @Html.HiddenFor(m => m.CaseId)
                        @if (Model.CaseStatusId == "315840002") //the case is new
                        {
                            <div id="divDeleteAlert" class="alert alert-warning hidden">
                                <p>@Localizer["Are you sure?"]</p>
                                <div class="btn-group">
                                    <input type="submit" id="btnConfirmDelete" asp-action="Delete" value='@Localizer["Confirm"]' class="btn btn-danger" />
                                    <input type="button" id="btnCancelDelete" value='@Localizer["Cancel"]' class="btn btn-default" />
                                </div>
                            </div>
                            <div id="divSubmitAlert" class="alert alert-warning hidden">
                                <p>@Localizer["Are you sure?"]</p>
                                <div class="btn-group">
                                    <input type="submit" id="btnConfirmSubmit" asp-action="Submit" value='@Localizer["Confirm"]' class="btn btn-danger" />
                                    <input type="button" id="btnCancelSubmit" value='@Localizer["Cancel"]' class="btn btn-default" />
                                </div>
                            </div>
                            <div class="" id="divButtons">
                                <a asp-action="Update" asp-route-id="@Model.CaseId" class="btn btn-primary">@Localizer["Update"]</a>
                                <a id="btnDelete" class="btn btn-link">@Localizer["Delete"]</a>
                                <div class="pull-right"><button id="btnSubmitCase" type="button" class="btn btn-success">@SharedLocalizer["Submit case"]</button></div>
                            </div>
                        }
                        else if (Model.CaseStatusId == "315840001" || Model.CaseStatusId == "315840000" || Model.CaseStatusId == "315840003") //withdraw
                        {
                            <div id="divWithdrawAlert" class="alert alert-warning hidden">
                                <p>@Localizer["Are you sure?"]</p>
                                <div class="form-group">
                                    <input type="submit" id="btnConfirmWithdraw" asp-action="Withdraw" value="@Localizer["Confirm"]" class="btn btn-danger" />
                                    <input type="button" id="btnCancelWithdraw" value="@Localizer["Cancel"]" class="btn btn-default" />
                                </div>
                            </div>
                            <div class="btn-group" id="divButtons">
                                <input type="button" id="btnWithdraw" value="@Localizer["Withdraw"]" class="btn btn-primary" />
                            </div>
                        }
                    </form>
                </details>
                @if (Model.Questions.Count > 0)
                {
                    <details id="tabQuestions">
                        <summary>@Localizer["Questions and Answers"]</summary>
                        @if ((string)TempData["QuestionAnswered"] == "true")
                        {
                            <section class="alert alert-success">
                              <p>@Localizer["Your response was successfully submitted."]</p>
                              <button type="button" class="btn btn-success" id="btnQuestionAnswered">@Localizer["OK"]</button>
                            </section> 
                        }
                        @if (Model.UnAnsweredQuestions.Count > 0)
                        {
                            <h2>@Localizer["Current question(s):"]</h2>
                            @for (int i = 0; i < Model.UnAnsweredQuestions.Count; i++)
                            {
                                @await Html.PartialAsync("_QuestionPartial", Model.UnAnsweredQuestions[i])
                            }
                        }
                        @if (Model.AnsweredQuestions.Count > 0)
                        {
                            <h2>@Localizer["Previously answered question(s):"]</h2>
                            @for (int i = 0; i < Model.AnsweredQuestions.Count; i++)
                            {
                                @await Html.PartialAsync("_QuestionPartial", Model.AnsweredQuestions[i])
                            }
                        }
                    </details>
                }

                <details id="tabAttachments">
                    <summary>@Localizer["Attachments"]</summary>
                    @await Html.PartialAsync("_AttachmentPartial", Model.NewAttachment)
                    <table class="table table-striped" data-wb-tables='{ "ordering" : true, "aaSorting": [[3, "desc"]] }' id="tblAttachments">
                        <thead class="thead-light">
                            <tr>
                                <th scope="col">
                                    @Localizer["Subject"]
                                </th>
                                <th scope="col">
                                    @Localizer["Attachment Description"]
                                </th>
                                <th scope="col">
                                    @Localizer["File Name"]
                                </th>
                                <th scope="col">
                                    @Localizer["Created On"]
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Attachments?.Count > 0)
                            {
                                @foreach (AnnotationModel file in Model.Attachments)
                                {
                                    <tr>
                                        <td>
                                            @file.Subject
                                        </td>
                                        <td>
                                            @file.NoteText
                                        </td>
                                        <td>
                                            @Html.ActionLink(file.FileName, "DownloadAttachment", "hrcase", new { attachmentId = file.Annotationid })
                                        </td>

                                        <td>
                                            <span class="localDateTime">@file.DateCreated</span>
                                        </td>
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="7">
                                        @Localizer["N/A"]
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                </details>
        </div>
    </div>

</div>
</div>


<div>
    <a asp-action="List" class="btn btn-default"><span class="fa fa fa-caret-left mrgn-rght-sm"></span>@SharedLocalizer["View my cases"]</a>
</div>
@section CustomScripts {
    @*@{await Html.RenderPartialAsync("_ValidationScriptsPartial");}*@
<script type="text/javascript">
        $(document).ready(function () {

        });

        $(document).on("wb-ready.wb-tabs", ".wb-tabs", function (event) {
            var textarea = $('textarea[maxlength]');
            var text = ' ' + '@SharedLocalizer["characters remaining."]';


            $.fn.getCharactersRemaining = function () {
                var length = $(this).val().length;
                var maxLength = parseInt($(this).attr('maxlength'));
                var remaining = maxLength - length;

                return remaining;
            };

            if ($('#formQuestionAnswers').find($("textarea")).length > 0) {
                $('#btnUpdateAnswers').removeClass("hidden");
            }

            textarea.each(function () {
                var html = '<span class="counter">' + $(this).getCharactersRemaining() + '</span>' + text;

                //display the character count below the textarea when the page loads.
                $(this).after(html);

                $(this).on("input keyup keydown focus", function () {
                    //update character count as you type.
                    $(this).next('.counter').text($(this).getCharactersRemaining());
                });
            });

            $('#btnWithdraw,#btnCancelWithdraw').click(function () {
                $('#divButtons, #divWithdrawAlert').toggleClass("hidden");
            });

            $('#btnDelete,#btnCancelDelete').click(function () {
                $('#divButtons, #divDeleteAlert').toggleClass("hidden");
            });

            $('#btnSubmitCase, #btnCancelSubmit').click(function () {
                $('#divButtons, #divSubmitAlert').toggleClass("hidden");
            });

            var localDateTimes = $('.localDateTime');
            localDateTimes.each(function () {
                var utcTime = this.innerHTML;
                if (utcTime != null) {
                    var d = new Date(utcTime);
                    this.innerHTML = utcTime.substring(0, 10) + " " + ("0" + d.getHours()).slice(-2) + ":" + ("0" + d.getMinutes()).slice(-2);
                }
            });

            var missingZeros = 9 - $("#PRI").text().length;
            for (var i = 0; i < missingZeros; i++) {
                $("#PRI").text('0' + $("#PRI").text());
            }
            $("#PRI").text($("#PRI").text().replace(/(\d{3})\-?(\d{3})\-?(\d{3})/, '$1-$2-$3'));


            //Hide and Show question form
            $(".btnRespond").click(function () {
                $(this).next('div').toggleClass('hidden');
                $(this).toggleClass('hidden');
            });
            $(".btnCancelQuestionUpdate").click(function (event) {
                $(this).closest('.panel-body').children('.btnRespond').toggleClass('hidden');
                $(this).closest(".editForm").toggleClass('hidden');
            });
            $("#btnQuestionAnswered").click(function () {
                $(this).closest("section").addClass("hidden");
            });


        });



</script>
}

